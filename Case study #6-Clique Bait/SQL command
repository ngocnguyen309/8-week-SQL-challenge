WITH view_and_add AS
(SELECT visit_id,
       ph.page_id, 
       page_name, 
       product_category, 
       SUM(CASE WHEN event_type=1 THEN 1 ELSE 0 END) AS page_view, 
       SUM(CASE WHEN event_type=2 THEN 1 ELSE 0 END) AS add_to_cart
FROM clique_bait.events AS e
JOIN clique_bait.page_hierarchy AS ph
ON e.page_id=ph.page_id
WHERE product_category IS NOT NULL
GROUP BY visit_id, 
         ph.page_id, 
         page_name, 
         product_category),
purchase_type AS 
(SELECT DISTINCT visit_id 
FROM clique_bait.events 
WHERE event_type=3),
combine AS 
(SELECT v.visit_id, 
       page_id, 
       page_name, 
       product_category, 
       page_view, 
       add_to_cart, 
       (CASE WHEN p.visit_id IS NOT NULL THEN 1 ELSE 0 END) AS purchase
FROM view_and_add AS v
LEFT JOIN purchase_type AS p
ON v.visit_id=p.visit_id)

SELECT page_id, 
       page_name,  
       SUM(page_view) AS page_viewed, 
       SUM(add_to_cart) AS added_to_cart, 
       SUM(CASE WHEN add_to_cart=1 and purchase=0 THEN 1 ELSE 0 END) AS abandoned, 
       SUM(CASE WHEN add_to_cart =1 and purchase =1 THEN 1 ELSE 0 END) AS purchased
FROM combine
GROUP BY page_id, 
         page_name



C. CAMPAGIN ANALYSIS
WITH cte1 AS
(
SELECT user_id, 
       visit_id, 
       MIN(event_time) AS visit_start_time
FROM clique_bait.users AS u
JOIN clique_bait.events AS e
ON u.cookie_id=e.cookie_id
GROUP BY user_id, visit_id
),cte2 AS
(
SELECT user_id, 
       e.visit_id, 
       visit_start_time,
       DATE(visit_start_time) AS date_start, 
       SUM(CASE WHEN event_type=1 THEN 1 ELSE 0 END) AS page_views, 
       SUM(CASE WHEN event_type=2 THEN 1 ELSE 0 END) AS cart_adds
FROM clique_bait.events AS e
JOIN cte1
ON cte1.visit_id=e.visit_id
GROUP BY user_id, 
         e.visit_id, 
         visit_start_time,
         DATE(visit_start_time)
),cte3 AS 
(
SELECT DISTINCT visit_id
FROM clique_bait.events
WHERE event_type=3
),cte4 AS
(                                   
SELECT user_id, 
       c2.visit_id, 
       visit_start_time, 
       date_start, 
       page_views, 
       cart_adds, 
       (CASE WHEN c3.visit_id IS NOT NULL THEN 1 ELSE 0 END) purchase
FROM cte2  AS c2                        
LEFT JOIN cte3  AS c3                   
ON c2.visit_id=c3.visit_id),cte5 as 
(        
SELECT visit_id, 
       event_type
FROM clique_bait.events                                   
WHERE event_type=4 
OR event_type=5
),cte6 AS (                                   
SELECT user_id, 
       c4.visit_id, 
       date_start, 
       visit_start_time, 
       page_views, 
       cart_adds, 
       purchase, 
       SUM(CASE WHEN event_type=4 THEN 1 ELSE 0 END) AS impression, 
       SUM(CASE WHEN event_type=5 THEN 1 ELSE 0 END) AS click
FROM cte4 AS c4
LEFT JOIN cte5 AS c5
ON c4.visit_id=c5.visit_id
GROUP BY user_id, 
         c4.visit_id, 
         date_start, 
         visit_start_time,
         page_views, 
         cart_adds, 
         purchase),
cte7 AS
(
SELECT user_id, 
       visit_id, 
       visit_start_time, 
       page_views, 
       cart_adds, 
       purchase, 
       campaign_name, 
       impression, 
       click
FROM cte6 as c6                                   
JOIN clique_bait.campaign_identifier AS c                                 
ON date_start BETWEEN start_date AND end_date),
impressions AS 
(
SELECT campaign_name, 
       COUNT(DISTINCT user_id) AS impression_user
FROM cte7
WHERE impression>0
GROUP BY campaign_name
),
clicks AS 
(
SELECT campaign_name, 
       COUNT(DISTINCT user_id) AS click_user
FROM cte7
WHERE click>0
GROUP BY campaign_name
)

SELECT i.campaign_name, 
       ROUND((click_user::NUMERIC/impression_user),2) AS click_to_rate
FROM impressions AS i
JOIN clicks AS c
ON i.campaign_name=c.campaign_name
               
